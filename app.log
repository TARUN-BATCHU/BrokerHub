[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.brokerhub:brokerageapp >---------------------
[INFO] Building brokerageapp 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.2.0:run (default-cli) > test-compile @ brokerageapp >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ brokerageapp ---
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] Copying 3 resources from src\main\resources to target\classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ brokerageapp ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ brokerageapp ---
[INFO] Not copying test resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ brokerageapp ---
[INFO] Not compiling test sources
[INFO] 
[INFO] <<< spring-boot:3.2.0:run (default-cli) < test-compile @ brokerageapp <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.2.0:run (default-cli) @ brokerageapp ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-08-05 21:34:14 - Starting BrokerageAppApplication using Java 21.0.2 with PID 11956 (D:\Intellij Projects\BrokerHub-MultiUser\target\classes started by HP in d:\Intellij Projects\BrokerHub-MultiUser)
2025-08-05 21:34:14 - No active profile set, falling back to 1 default profile: "default"
2025-08-05 21:34:16 - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 21:34:16 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 21:34:17 - Finished Spring Data repository scanning in 367 ms. Found 24 JPA repository interfaces.
2025-08-05 21:34:17 - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 21:34:17 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.AddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.BrokeragePaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.BrokerageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.BrokerBankDetailsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.BrokerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.BrokersAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.CurrentFinancialYearRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.DailyLedgerRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.DashboardRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.DataVerificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.FinancialYearRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.GeneratedDocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.LedgerDetailsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.LedgerRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.market.BuyerRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.market.MarketProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.market.SellerRequestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.MerchantBankDetailsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.PartPaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.PendingPaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.ReceivablePaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.UserBrokerageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.brokerhub.brokerageapp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 21:34:17 - Finished Spring Data repository scanning in 37 ms. Found 0 Redis repository interfaces.
2025-08-05 21:34:18 - Tomcat initialized with port 8080 (http)
2025-08-05 21:34:18 - Starting service [Tomcat]
2025-08-05 21:34:18 - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-08-05 21:34:18 - Initializing Spring embedded WebApplicationContext
2025-08-05 21:34:18 - Root WebApplicationContext: initialization completed in 3733 ms
2025-08-05 21:34:18 - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 21:34:18 - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-08-05 21:34:18 - HHH000026: Second-level cache disabled
2025-08-05 21:34:19 - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 21:34:19 - HikariPool-1 - Starting...
2025-08-05 21:34:21 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5e7cd0df
2025-08-05 21:34:21 - HikariPool-1 - Start completed.
2025-08-05 21:34:22 - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 21:34:24 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 21:34:24 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@b91e024] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 21:34:25 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 21:34:25 - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 21:34:30 - Analytics task executor initialized with core pool size: 4, max pool size: 8
2025-08-05 21:34:30 - Database task executor initialized with core pool size: 6, max pool size: 12
2025-08-05 21:34:30 - Cache task executor initialized with core pool size: 2, max pool size: 4
2025-08-05 21:34:30 - Payment task executor initialized with core pool size: 3, max pool size: 6
2025-08-05 21:34:30 - Bulk operation task executor initialized with core pool size: 4, max pool size: 8
2025-08-05 21:34:30 - Default task executor initialized with core pool size: 4, max pool size: 8
2025-08-05 21:34:30 - Redis template configured successfully with JSR310 support
2025-08-05 21:34:31 - 128 mappings in 'requestMappingHandlerMapping'
2025-08-05 21:34:31 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-05 21:34:31 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4984347c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22944454, org.springframework.security.web.context.SecurityContextHolderFilter@41b8e985, org.springframework.security.web.header.HeaderWriterFilter@73c3adb8, org.springframework.web.filter.CorsFilter@29a83a1f, org.springframework.security.web.authentication.logout.LogoutFilter@72219922, com.brokerhub.brokerageapp.security.JwtAuthenticationFilter@58338338, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@132bc3fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cb78e36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2bcacf82, org.springframework.security.web.session.SessionManagementFilter@197115d6, org.springframework.security.web.access.ExceptionTranslationFilter@e01664e, org.springframework.security.web.access.intercept.AuthorizationFilter@35ebd21a]
2025-08-05 21:34:31 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-05 21:34:31 - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-05 21:34:31 - Tomcat started on port 8080 (http) with context path ''
2025-08-05 21:34:31 - Started BrokerageAppApplication in 17.643 seconds (process running for 18.235)
2025-08-05 21:34:31 - === System Performance Metrics ===
2025-08-05 21:34:31 - max_memory_mb: 2026
2025-08-05 21:34:31 - available_processors: 8
2025-08-05 21:34:31 - used_memory_mb: 88
2025-08-05 21:34:31 - memory_usage_percent: 4.346008903300068
2025-08-05 21:34:31 - total_memory_mb: 119
2025-08-05 21:34:31 - free_memory_mb: 30
2025-08-05 21:34:31 - active_threads: 20
2025-08-05 21:34:31 - === End System Metrics ===
2025-08-05 21:34:31 - === Cache Performance Metrics ===
2025-08-05 21:34:31 - productBasicInfo_exists: true
2025-08-05 21:34:31 - userNames_exists: true
2025-08-05 21:34:31 - financialYearAnalytics_exists: true
2025-08-05 21:34:31 - productNamesAndQualities_exists: true
2025-08-05 21:34:31 - dailyLedger_exists: true
2025-08-05 21:34:31 - paymentDashboard_exists: true
2025-08-05 21:34:31 - userNamesAndIds_exists: true
2025-08-05 21:34:31 - productNamesAndIds_exists: true
2025-08-05 21:34:31 - productNames_exists: true
2025-08-05 21:34:31 - userBasicInfo_exists: true
2025-08-05 21:34:31 - distinctProductNames_exists: true
2025-08-05 21:34:31 - === End Cache Metrics ===
2025-08-05 21:34:31 - === Database Performance Metrics ===
2025-08-05 21:34:31 - slow_queries: 0
2025-08-05 21:34:31 - largest_tables: {receivable_transaction=0.05, brokerage_payment=0.06, payment_transaction=0.13, receivable_payment=0.06, part_payment=0.05, ledger_details=0.05, ledger_record=0.06, broker=0.05, user=0.05, pending_payment=0.06}
2025-08-05 21:34:31 - active_connections: 6
2025-08-05 21:34:31 - === End Database Metrics ===
2025-08-05 21:37:31 - === Cache Performance Metrics ===
2025-08-05 21:37:31 - productBasicInfo_exists: true
2025-08-05 21:37:31 - userNames_exists: true
2025-08-05 21:37:31 - financialYearAnalytics_exists: true
2025-08-05 21:37:31 - productNamesAndQualities_exists: true
2025-08-05 21:37:31 - dailyLedger_exists: true
2025-08-05 21:37:31 - paymentDashboard_exists: true
2025-08-05 21:37:31 - userNamesAndIds_exists: true
2025-08-05 21:37:31 - productNamesAndIds_exists: true
2025-08-05 21:37:31 - productNames_exists: true
2025-08-05 21:37:31 - userBasicInfo_exists: true
2025-08-05 21:37:31 - distinctProductNames_exists: true
2025-08-05 21:37:31 - === End Cache Metrics ===
2025-08-05 21:39:31 - === Database Performance Metrics ===
2025-08-05 21:39:31 - slow_queries: 0
2025-08-05 21:39:31 - largest_tables: {receivable_transaction=0.05, brokerage_payment=0.06, payment_transaction=0.13, receivable_payment=0.06, part_payment=0.05, ledger_details=0.05, ledger_record=0.06, broker=0.05, user=0.05, pending_payment=0.06}
2025-08-05 21:39:31 - active_connections: 5
2025-08-05 21:39:31 - === End Database Metrics ===
2025-08-05 21:40:31 - === Cache Performance Metrics ===
2025-08-05 21:40:31 - productBasicInfo_exists: true
2025-08-05 21:40:31 - userNames_exists: true
2025-08-05 21:40:31 - financialYearAnalytics_exists: true
2025-08-05 21:40:31 - productNamesAndQualities_exists: true
2025-08-05 21:40:31 - dailyLedger_exists: true
2025-08-05 21:40:31 - paymentDashboard_exists: true
2025-08-05 21:40:31 - userNamesAndIds_exists: true
2025-08-05 21:40:31 - productNamesAndIds_exists: true
2025-08-05 21:40:31 - productNames_exists: true
2025-08-05 21:40:31 - userBasicInfo_exists: true
2025-08-05 21:40:31 - distinctProductNames_exists: true
2025-08-05 21:40:31 - === End Cache Metrics ===
2025-08-05 21:43:31 - === Cache Performance Metrics ===
2025-08-05 21:43:31 - productBasicInfo_exists: true
2025-08-05 21:43:31 - userNames_exists: true
2025-08-05 21:43:31 - financialYearAnalytics_exists: true
2025-08-05 21:43:31 - productNamesAndQualities_exists: true
2025-08-05 21:43:31 - dailyLedger_exists: true
2025-08-05 21:43:31 - paymentDashboard_exists: true
2025-08-05 21:43:31 - userNamesAndIds_exists: true
2025-08-05 21:43:31 - productNamesAndIds_exists: true
2025-08-05 21:43:31 - productNames_exists: true
2025-08-05 21:43:31 - userBasicInfo_exists: true
2025-08-05 21:43:31 - distinctProductNames_exists: true
2025-08-05 21:43:31 - === End Cache Metrics ===
2025-08-05 21:44:31 - === System Performance Metrics ===
2025-08-05 21:44:31 - max_memory_mb: 2026
2025-08-05 21:44:31 - available_processors: 8
2025-08-05 21:44:31 - used_memory_mb: 88
2025-08-05 21:44:31 - memory_usage_percent: 4.382144216253162
2025-08-05 21:44:31 - total_memory_mb: 119
2025-08-05 21:44:31 - free_memory_mb: 30
2025-08-05 21:44:31 - active_threads: 20
2025-08-05 21:44:31 - === End System Metrics ===
2025-08-05 21:44:31 - === Database Performance Metrics ===
2025-08-05 21:44:31 - slow_queries: 0
2025-08-05 21:44:31 - largest_tables: {receivable_transaction=0.05, brokerage_payment=0.06, payment_transaction=0.13, receivable_payment=0.06, part_payment=0.05, ledger_details=0.05, ledger_record=0.06, broker=0.05, user=0.05, pending_payment=0.06}
2025-08-05 21:44:31 - active_connections: 5
2025-08-05 21:44:31 - === End Database Metrics ===
2025-08-05 21:46:32 - === Cache Performance Metrics ===
2025-08-05 21:46:33 - productBasicInfo_exists: true
2025-08-05 21:46:33 - userNames_exists: true
2025-08-05 21:46:33 - financialYearAnalytics_exists: true
2025-08-05 21:46:33 - productNamesAndQualities_exists: true
2025-08-05 21:46:33 - dailyLedger_exists: true
2025-08-05 21:46:33 - paymentDashboard_exists: true
2025-08-05 21:46:33 - userNamesAndIds_exists: true
2025-08-05 21:46:33 - productNamesAndIds_exists: true
2025-08-05 21:46:33 - productNames_exists: true
2025-08-05 21:46:33 - userBasicInfo_exists: true
2025-08-05 21:46:33 - distinctProductNames_exists: true
2025-08-05 21:46:33 - === End Cache Metrics ===
2025-08-05 21:49:31 - === Cache Performance Metrics ===
2025-08-05 21:49:31 - productBasicInfo_exists: true
2025-08-05 21:49:31 - userNames_exists: true
2025-08-05 21:49:31 - financialYearAnalytics_exists: true
2025-08-05 21:49:31 - productNamesAndQualities_exists: true
2025-08-05 21:49:31 - dailyLedger_exists: true
2025-08-05 21:49:31 - paymentDashboard_exists: true
2025-08-05 21:49:31 - userNamesAndIds_exists: true
2025-08-05 21:49:31 - productNamesAndIds_exists: true
2025-08-05 21:49:31 - productNames_exists: true
2025-08-05 21:49:31 - userBasicInfo_exists: true
2025-08-05 21:49:31 - distinctProductNames_exists: true
2025-08-05 21:49:31 - === End Cache Metrics ===
2025-08-05 21:49:39 - === Database Performance Metrics ===
2025-08-05 21:49:39 - slow_queries: 0
2025-08-05 21:49:39 - largest_tables: {receivable_transaction=0.05, brokerage_payment=0.06, payment_transaction=0.13, receivable_payment=0.06, part_payment=0.05, ledger_details=0.05, ledger_record=0.06, broker=0.05, user=0.05, pending_payment=0.06}
2025-08-05 21:49:39 - active_connections: 5
2025-08-05 21:49:39 - === End Database Metrics ===
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16:32 min
[INFO] Finished at: 2025-08-05T21:50:39+05:30
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:3.2.0:run (default-cli) on project brokerageapp: Process terminated with exit code: 1 -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
